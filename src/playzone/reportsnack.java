/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package playzone;

import java.awt.Color;
import java.io.File;
import java.io.FileOutputStream;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;


/**
 *
 * @author admin
 */
public class reportsnack extends javax.swing.JFrame {
      public Statement st;
    public PreparedStatement ps;
    public ResultSet rs;
    java.sql.Connection cobakonek=playzone.Koneksi_db.configDB(); //penting
    private Object logout;

    /**
     * Creates new form reportsnack
     */
    public reportsnack() {
        this.setUndecorated(true); 
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jComboBox1 = new javax.swing.JComboBox<>();
        home = new javax.swing.JButton();
        gamerent = new javax.swing.JButton();
        onspot = new javax.swing.JButton();
        snack = new javax.swing.JButton();
        lgout = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox<>();
        btnExportExcel = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID pegawai", "ID Transaksi", "Tanggal", "Kode Snack", "Harga", "Jumlah", "Total Harga", "Bayar", "Kembali"
            }
        ));
        jTable1.setShowGrid(true);
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(352, 184, 990, 490));

        jComboBox1.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Snack", "ON-SPOT Play", "Game Rent" }));
        jComboBox1.setDoubleBuffered(true);
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(507, 32, 280, 40));

        home.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/btn isi home.png"))); // NOI18N
        home.setContentAreaFilled(false);
        home.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/efk isi home.png"))); // NOI18N
        home.setLabel("");
        home.setContentAreaFilled(false);
        home.setBorderPainted(false);
        home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeActionPerformed(evt);
            }
        });
        getContentPane().add(home, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 210, 230, 80));

        gamerent.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/btn isi Game Rent.png"))); // NOI18N
        gamerent.setContentAreaFilled(false);
        gamerent.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/efk isi Game Rent.png"))); // NOI18N
        gamerent.setLabel("");
        gamerent.setContentAreaFilled(false);
        gamerent.setBorderPainted(false);
        gamerent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gamerentActionPerformed(evt);
            }
        });
        getContentPane().add(gamerent, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 330, 190, 40));

        onspot.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/btn isi ON-Spot Play.png"))); // NOI18N
        onspot.setContentAreaFilled(false);
        onspot.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/efk isi ON-Spot Play.png"))); // NOI18N
        onspot.setLabel("");
        onspot.setContentAreaFilled(false);
        onspot.setBorderPainted(false);
        onspot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onspotActionPerformed(evt);
            }
        });
        getContentPane().add(onspot, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 400, 210, 40));

        snack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/btn isi Snack.png"))); // NOI18N
        snack.setContentAreaFilled(false);
        snack.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/efk isi Snack.png"))); // NOI18N
        snack.setLabel("");
        snack.setContentAreaFilled(false);
        snack.setBorderPainted(false);
        snack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                snackActionPerformed(evt);
            }
        });
        getContentPane().add(snack, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 460, 170, 50));

        lgout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/btn isi logout.png"))); // NOI18N
        lgout.setContentAreaFilled(false);
        lgout.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/efk isi logout.png"))); // NOI18N
        lgout.setLabel("");
        lgout.setContentAreaFilled(false);
        lgout.setBorderPainted(false);
        lgout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lgoutActionPerformed(evt);
            }
        });
        getContentPane().add(lgout, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 670, 230, 80));

        jComboBox2.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 33, 230, 40));

        btnExportExcel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/btn export.png"))); // NOI18N
        btnExportExcel.setBorder(null);
        btnExportExcel.setContentAreaFilled(false);
        btnExportExcel.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/efk export.png"))); // NOI18N
        btnExportExcel.setContentAreaFilled(false);
        btnExportExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportExcelActionPerformed(evt);
            }
        });
        getContentPane().add(btnExportExcel, new org.netbeans.lib.awtextra.AbsoluteConstraints(688, 695, 320, 60));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/bg no Reports Snack.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1380, 770));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lgoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lgoutActionPerformed

        // Menampilkan dialog konfirmasi
        int confirm = JOptionPane.showConfirmDialog(null, "Yakin ingin logout?", "Logout", JOptionPane.YES_NO_OPTION);
        
        // Jika memilih YES, logout
       /* if (confirm == JOptionPane.YES_OPTION) {
            login nw_transaksi = new login();
            nw_transaksi.setVisible(true);
            this.dispose(); 
        } else {
            // Tidak ada aksi jika memilih NO
            System.out.println("Logout dibatalkan.");
        }
*/
    }//GEN-LAST:event_lgoutActionPerformed

    private void homeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeActionPerformed
      /*  homePegawai nw_transaksi = new homePegawai();
        nw_transaksi.setVisible(true);
        this.dispose();*/
    }//GEN-LAST:event_homeActionPerformed

    private void gamerentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gamerentActionPerformed
      /*  TrSewaPegawai nw_transaksi = new TrSewaPegawai();
        nw_transaksi.setVisible(true);
        this.dispose();*/
    }//GEN-LAST:event_gamerentActionPerformed

    private void onspotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onspotActionPerformed
       /* transaksiMainDitempat nw_transaksi = new transaksiMainDitempat();
        nw_transaksi.setVisible(true);
        this.dispose();*/
    }//GEN-LAST:event_onspotActionPerformed

    private void snackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_snackActionPerformed
      /*  transaksiSnack nw_transaksi = new transaksiSnack();
        nw_transaksi.setVisible(true);
        this.dispose();*/
    }//GEN-LAST:event_snackActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        String selectedItem = jComboBox1.getSelectedItem().toString();

    /*  if (selectedItem.equalsIgnoreCase("On-Spot Play")) {
        LprnMainDitempat nw_transaksi = new LprnMainDitempat();
        nw_transaksi.setVisible(true);
        this.dispose();
    } else if (selectedItem.equalsIgnoreCase("Game rent")) {
        LprnSewa nw_transaksi = new LprnSewa();
        nw_transaksi.setVisible(true);
        this.dispose();
    }*/
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
      String sql = "SELECT t.ID_pegawai, t.ID_transaksi, t.Tanggal, d.Kode_snack, d.Harga, d.Jumlah, d.Total_harga, t.Bayar, t.Kembalian " +
                "FROM transaksi_snack t " +
                "JOIN detail_transaksisnack d ON t.ID_transaksi = d.ID_transaksi " +
                "JOIN snack s ON d.Kode_snack = s.Kode_snack " +
                "ORDER BY t.ID_transaksi ASC";

           loadDataToTable(sql);
    }//GEN-LAST:event_formWindowOpened

        private int getMonthFromString(String monthName) {
        switch(monthName.toLowerCase()) {
            case "januari": return 1;
            case "februari": return 2;
            case "maret": return 3;
            case "april": return 4;
            case "mei": return 5;
            case "juni": return 6;
            case "juli": return 7;
            case "agustus": return 8;
            case "september": return 9;
            case "oktober": return 10;
            case "november": return 11;
            case "desember": return 12;
            default: return 0; // jika tidak cocok
        }
    }

    private void loadDataToTable(String sql, int param){
        DefaultTableModel model = new DefaultTableModel(); // private class yang berfungsi untuk menyediakan colom di swing tabel
        model.addColumn("ID pegawai");
        model.addColumn("ID transaksi");
        model.addColumn("Tanggal");
        model.addColumn("Kode Snack");
        model.addColumn("Harga");
        model.addColumn("Jumlah");
        model.addColumn("Total harga");
        model.addColumn("Bayar"); 
        model.addColumn("Kembali");
        
        try {
           ps = cobakonek.prepareStatement(sql);  // fungsi Read dalam CRUD
           ps.setInt(1, param);
           rs = ps.executeQuery();
           
           while(rs.next()) {             // Kode ini digunakan untuk mengambil data pada database yang akan ditampilkan di swing tabel
            model.addRow(new Object[]{ 
            rs.getString("ID_pegawai"),  
            rs.getString("ID_transaksi"),
            rs.getString("Tanggal"),
            rs.getString("Kode_snack"),
            rs.getDouble("Harga"),
            rs.getInt("Jumlah"),
            rs.getDouble("Total_harga"),
            rs.getDouble("Bayar"),
            rs.getDouble("Kembalian")

           });
           }
           jTable1.setModel(model); // nantinya akan diabil oleh variabel tabel dan ditampilkan
           
        } catch (SQLException e) {   // menampilkan error bila terjadi kesalahan supaya lebih mudah jika akan diperbaiki
           JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());   
        }
    }
    
     private void loadDataToTable(String sql) {
    DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID pegawai");
        model.addColumn("ID transaksi");
        model.addColumn("Tanggal");
        model.addColumn("Kode Snack");
        model.addColumn("Harga");
        model.addColumn("Jumlah");
        model.addColumn("Total harga");
        model.addColumn("Bayar"); 
        model.addColumn("Kembali");

    try {
        ps = cobakonek.prepareStatement(sql);
        rs = ps.executeQuery();

        while (rs.next()) {
            model.addRow(new Object[]{
            rs.getString("ID_pegawai"),  
            rs.getString("ID_transaksi"),
            rs.getString("Tanggal"),
            rs.getString("Kode_snack"),
            rs.getDouble("Harga"),
            rs.getInt("Jumlah"),
            rs.getDouble("Total_harga"),
            rs.getDouble("Bayar"),
            rs.getDouble("Kembalian")
            });
        }

        jTable1.setModel(model);
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
    }
}
    
    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        String selectedMonth = (String) jComboBox2.getSelectedItem();

        if (selectedMonth.equals("Pilih Bulan")) {
           String sql = "SELECT t.ID_pegawai, t.ID_transaksi, t.Tanggal, d.Kode_snack, d.Harga, d.Jumlah, d.Total_harga, t.Bayar, t.Kembalian " +
                "FROM transaksi_snack t " +
                "JOIN detail_transaksisnack d ON t.ID_transaksi = d.ID_transaksi " +
                "JOIN snack s ON d.Kode_snack = s.Kode_snack " +
                "ORDER BY t.ID_transaksi ASC";

           loadDataToTable(sql); // Panggil versi tanpa parameter
           return;
       }

       // Konversi nama bulan ke angka
       int month = getMonthFromString(selectedMonth);
       // Query untuk filter berdasarkan bulan transaksi
       String sql = "SELECT t.ID_pegawai, t.ID_transaksi, t.Tanggal, d.Kode_snack, d.Harga, d.Jumlah, d.Total_harga, t.Bayar, t.Kembalian " +
                "FROM transaksi_snack t " +
                "JOIN detail_transaksisnack d ON t.ID_transaksi = d.ID_transaksi " +
                "JOIN snack s ON d.Kode_snack = s.Kode_snack " +
                "WHERE MONTH(t.Tanggal) = ? " +
                "ORDER BY t.ID_transaksi ASC";


       // Tampilkan data ke tabel
       loadDataToTable(sql, month);

    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void btnExportExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportExcelActionPerformed
    
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Simpan Laporan Transaksi");
        fileChooser.setSelectedFile(new File("Laporan_Transaksi.xlsx"));

        int userSelection = fileChooser.showSaveDialog(this);
        if (userSelection == JFileChooser.APPROVE_OPTION) {
        File fileToSave = fileChooser.getSelectedFile();

        //  method, langsung pakai XSSFWorkbook
        try (Workbook workbook = new XSSFWorkbook()) {
        org.apache.poi.ss.usermodel.Sheet sheet = workbook.createSheet("Laporan Transaksi");

        //  jTableLaporanTransaksi yang sudah ada
        TableModel model = jTable1.getModel();

        // header
        org.apache.poi.ss.usermodel.Row headerRow = sheet.createRow(0);
        for (int col = 0; col < model.getColumnCount(); col++) {
        Cell cell = headerRow.createCell(col);
        cell.setCellValue(model.getColumnName(col));
        }

        // data baris per baris
        for (int row = 0; row < model.getRowCount(); row++) {
        org.apache.poi.ss.usermodel.Row excelRow = sheet.createRow(row + 1);
        for (int col = 0; col < model.getColumnCount(); col++) {
        Cell cell = excelRow.createCell(col);
        Object value = model.getValueAt(row, col);
        cell.setCellValue(value != null ? value.toString() : "");
        }
        }

        // Simpan file
        try (FileOutputStream out = new FileOutputStream(fileToSave)) {
        workbook.write(out);
        }

        JOptionPane.showMessageDialog(this, "Laporan Transaksi Berhasil Disimpan di: " + fileToSave.getAbsolutePath());
        } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat menyimpan file Excel.");
        }
        }
    }//GEN-LAST:event_btnExportExcelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(reportsnack.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(reportsnack.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(reportsnack.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(reportsnack.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new reportsnack().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExportExcel;
    private javax.swing.JButton gamerent;
    private javax.swing.JButton home;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton lgout;
    private javax.swing.JButton onspot;
    private javax.swing.JButton snack;
    // End of variables declaration//GEN-END:variables

}
