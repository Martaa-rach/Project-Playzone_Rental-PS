/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package playzone;
import java.io.File;
import java.io.FileOutputStream;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author OwOwO
 */
public class LprnMainDitempat extends javax.swing.JFrame {
    public Statement st;
    public PreparedStatement ps;
    public ResultSet rs;
    java.sql.Connection cobakonek=playzone.Koneksi_db.configDB(); //penting
    // Connection conn;

    /**
     * Creates new form LprnMainDitempat
     */
     public LprnMainDitempat() {
     this.setUndecorated(true); 
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
         initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonHome = new javax.swing.JButton();
        jButtongameRent = new javax.swing.JButton();
        jButtonMain = new javax.swing.JButton();
        jButtonSnack = new javax.swing.JButton();
        jButtonlgot = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jComboBox1 = new javax.swing.JComboBox<>();
        btnExportExcel = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButtonHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/btn isi home.png"))); // NOI18N
        jButtonHome.setContentAreaFilled(false);
        jButtonHome.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/efk isi home.png"))); // NOI18N
        jButtonHome.setLabel("");
        jButtonHome.setContentAreaFilled(false);
        jButtonHome.setBorderPainted(false);
        jButtonHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHomeActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonHome, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, 250, 80));

        jButtongameRent.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/btn isi Game Rent.png"))); // NOI18N
        jButtongameRent.setContentAreaFilled(false);
        jButtongameRent.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/efk isi Game Rent.png"))); // NOI18N
        jButtongameRent.setLabel("");
        jButtongameRent.setContentAreaFilled(false);
        jButtongameRent.setBorderPainted(false);
        jButtongameRent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtongameRentActionPerformed(evt);
            }
        });
        getContentPane().add(jButtongameRent, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 320, 210, 60));

        jButtonMain.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/btn isi ON-Spot Play.png"))); // NOI18N
        jButtonMain.setContentAreaFilled(false);
        jButtonMain.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/efk isi ON-Spot Play.png"))); // NOI18N
        jButtonMain.setLabel("");
        jButtonMain.setContentAreaFilled(false);
        jButtonMain.setBorderPainted(false);
        jButtonMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMainActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonMain, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 390, 250, 60));

        jButtonSnack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/btn isi Snack.png"))); // NOI18N
        jButtonSnack.setContentAreaFilled(false);
        jButtonSnack.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/efk isi Snack.png"))); // NOI18N
        jButtonSnack.setLabel("");
        jButtonSnack.setContentAreaFilled(false);
        jButtonSnack.setBorderPainted(false);
        jButtonSnack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSnackActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonSnack, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 460, 170, 60));

        jButtonlgot.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/btn isi logout.png"))); // NOI18N
        jButtonlgot.setContentAreaFilled(false);
        jButtonlgot.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/efk isi logout.png"))); // NOI18N
        jButtonlgot.setLabel("");
        jButtonlgot.setContentAreaFilled(false);
        jButtonlgot.setBorderPainted(false);
        jButtonlgot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonlgotActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonlgot, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 660, 230, 100));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID On Spot Play", "ID Pegawai", "ID Playstation", "Tanggal", "Class", "Durasi", "Harga", "Bayar", "Kembalian", "Status"
            }
        ));
        jTable1.setShowGrid(true);
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(348, 180, 1000, 490));

        jComboBox1.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ON-SPOT Play", "Game Rent", "Snack" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 32, 280, 40));

        btnExportExcel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/btn export.png"))); // NOI18N
        btnExportExcel.setBorder(null);
        btnExportExcel.setContentAreaFilled(false);
        btnExportExcel.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/efk export.png"))); // NOI18N
        btnExportExcel.setContentAreaFilled(false);
        btnExportExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportExcelActionPerformed(evt);
            }
        });
        getContentPane().add(btnExportExcel, new org.netbeans.lib.awtextra.AbsoluteConstraints(692, 695, 310, 60));

        jComboBox2.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 33, 220, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/bg no Reports On-Spot Play.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
     /*   String selectedItem = jComboBox1.getSelectedItem().toString();

      if (selectedItem.equalsIgnoreCase("Snack")) {
        reportsnack nw_transaksi = new reportsnack();
        nw_transaksi.setVisible(true);
        this.dispose();
    } else if (selectedItem.equalsIgnoreCase("Game Rent")) {
        LprnSewa nw_transaksi = new LprnSewa();
        nw_transaksi.setVisible(true);
        this.dispose();
    }*/
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButtonHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHomeActionPerformed
      /*  homePegawai nw_transaksi = new homePegawai();
        nw_transaksi.setVisible(true);
        this.dispose();*/
    }//GEN-LAST:event_jButtonHomeActionPerformed

    private void jButtonlgotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonlgotActionPerformed
// Menampilkan dialog konfirmasi
    /*    int confirm = JOptionPane.showConfirmDialog(null, "Yakin ingin logout?", "Logout", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            login nw_transaksi = new login();
            nw_transaksi.setVisible(true);
            this.dispose();
        } else {
            System.out.println("Logout dibatalkan.");
        }*/
    }//GEN-LAST:event_jButtonlgotActionPerformed

    private void jButtongameRentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtongameRentActionPerformed
         TrSewaPegawai nw_transaksi = new TrSewaPegawai();
        nw_transaksi.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButtongameRentActionPerformed

    private void jButtonMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMainActionPerformed
     /*    transaksiMainDitempat nw_transaksi = new transaksiMainDitempat();
        nw_transaksi.setVisible(true);
        this.dispose();*/
    
    }//GEN-LAST:event_jButtonMainActionPerformed

    private void jButtonSnackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSnackActionPerformed
      /*   transaksiSnack nw_transaksi = new transaksiSnack();
        nw_transaksi.setVisible(true);
        this.dispose();*/
    }//GEN-LAST:event_jButtonSnackActionPerformed

    private void btnExportExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportExcelActionPerformed

            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setDialogTitle("Simpan Laporan Transaksi");
            fileChooser.setSelectedFile(new File("Laporan_Transaksi.xlsx"));

            int userSelection = fileChooser.showSaveDialog(this);
            if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();

            //  method, langsung pakai XSSFWorkbook
                try (Workbook workbook = new XSSFWorkbook()) {
                org.apache.poi.ss.usermodel.Sheet sheet = workbook.createSheet("Laporan Transaksi");

                //  jTableLaporanTransaksi yang sudah ada
                TableModel model = jTable1.getModel();

                // header
                org.apache.poi.ss.usermodel.Row headerRow = sheet.createRow(0);
                for (int col = 0; col < model.getColumnCount(); col++) {
                    Cell cell = headerRow.createCell(col);
                    cell.setCellValue(model.getColumnName(col));
                }

                // data baris per baris
                for (int row = 0; row < model.getRowCount(); row++) {
                    org.apache.poi.ss.usermodel.Row excelRow = sheet.createRow(row + 1);
                    for (int col = 0; col < model.getColumnCount(); col++) {
                        Cell cell = excelRow.createCell(col);
                        Object value = model.getValueAt(row, col);
                        cell.setCellValue(value != null ? value.toString() : "");
                    }
                }

                // Simpan file
                try (FileOutputStream out = new FileOutputStream(fileToSave)) {
                    workbook.write(out);
                }

                    JOptionPane.showMessageDialog(this, "Laporan Transaksi Berhasil Disimpan di: " + fileToSave.getAbsolutePath());
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat menyimpan file Excel.");
                }
            }
    }//GEN-LAST:event_btnExportExcelActionPerformed

    private int getMonthFromString(String monthName) {
        switch(monthName.toLowerCase()) {
            case "januari": return 1;
            case "februari": return 2;
            case "maret": return 3;
            case "april": return 4;
            case "mei": return 5;
            case "juni": return 6;
            case "juli": return 7;
            case "agustus": return 8;
            case "september": return 9;
            case "oktober": return 10;
            case "november": return 11;
            case "desember": return 12;
            default: return 0; // jika tidak cocok
        }
    }
    
    private void loadDataToTable(String sql, int param){
        DefaultTableModel model = new DefaultTableModel(); // private class yang berfungsi untuk menyediakan colom di swing tabel
        model.addColumn("ID On Spot");
        model.addColumn("ID Pegawai");
        model.addColumn("ID playstation");
        model.addColumn("Tanggal");
        model.addColumn("Class");
        model.addColumn("Durasi"); 
        model.addColumn("Total harga"); 
        model.addColumn("Bayar");
        model.addColumn("Kembalian"); 
        model.addColumn("Status");

        try {
           ps = cobakonek.prepareStatement(sql);  // fungsi Read dalam CRUD
           ps.setInt(1, param);
           rs = ps.executeQuery();
           
           while(rs.next()) {             // Kode ini digunakan untuk mengambil data pada database yang akan ditampilkan di swing tabel
            model.addRow(new Object[]{ 
            rs.getString("ID_main_ditempat"),  
            rs.getString("ID_pegawai"),
            rs.getString("ID_playstation"),
            rs.getDate("Tanggal"),
            rs.getString("Class"),
            rs.getInt("Durasi_main"),
            rs.getDouble("Total_biaya"), 
            rs.getDouble("Bayar"),
            rs.getDouble("Kembalian"),
            rs.getString("status")

           });
           }
           jTable1.setModel(model); // nantinya akan diabil oleh variabel tabel dan ditampilkan
           
        } catch (SQLException e) {   // menampilkan error bila terjadi kesalahan supaya lebih mudah jika akan diperbaiki
           JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());   
        }
    }
    
    private void loadDataToTable(String sql) {
    DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID On Spot");
        model.addColumn("ID Pegawai");
        model.addColumn("ID playstation");
        model.addColumn("Tanggal");
        model.addColumn("Class");
        model.addColumn("Durasi"); 
        model.addColumn("Total harga"); 
        model.addColumn("Bayar");
        model.addColumn("Kembalian"); 
        model.addColumn("Status");

    try {
        ps = cobakonek.prepareStatement(sql);
        rs = ps.executeQuery();

        while (rs.next()) {
            model.addRow(new Object[]{
            rs.getString("ID_main_ditempat"),  
            rs.getString("ID_pegawai"),
            rs.getString("ID_playstation"),
            rs.getDate("Tanggal"),
            rs.getString("Class"),
            rs.getInt("Durasi_main"),
            rs.getDouble("Total_biaya"), 
            rs.getDouble("Bayar"),
            rs.getDouble("Kembalian"),
            rs.getString("status")
            });
        }

        jTable1.setModel(model);
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
    }
}
    
    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        String selectedMonth = (String) jComboBox2.getSelectedItem();

    // Hindari eksekusi jika belum pilih bulan
    if (selectedMonth.equals("Pilih Bulan")) {
        String sql = "SELECT m.ID_main_ditempat, p.ID_pegawai, ps.ID_playstation, " +
             "m.Tanggal, m.Class, m.Durasi_main, m.Total_biaya, m.Bayar, m.Kembalian, m.status " +
             "FROM main_ditempat m " +
             "JOIN pegawai p ON m.ID_pegawai = p.ID_pegawai " +
             "JOIN playstation ps ON m.ID_playstation = ps.ID_playstation";

        loadDataToTable(sql); // Panggil versi tanpa parameter
        return;
    }

    // Konversi nama bulan ke angka
    int month = getMonthFromString(selectedMonth);
    String sql = "SELECT m.ID_main_ditempat, p.ID_pegawai, ps.ID_playstation, " +
             "m.Tanggal, m.Class, m.Durasi_main, m.Total_biaya, m.Bayar, m.Kembalian, m.status " +
             "FROM main_ditempat m " +
             "JOIN pegawai p ON m.ID_pegawai = p.ID_pegawai " +
             "JOIN playstation ps ON m.ID_playstation = ps.ID_playstation " +  // tambahkan spasi
             "WHERE MONTH(m.Tanggal) = ?";

    // Tampilkan data ke tabel
    loadDataToTable(sql, month);
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        String sql = "SELECT m.ID_main_ditempat, p.ID_pegawai, ps.ID_playstation, " +
                    "m.Tanggal, m.Class, m.Durasi_main, m.Total_biaya, m.Bayar, m.Kembalian, m.status " +
                    "FROM main_ditempat m " +
                    "JOIN pegawai p ON m.ID_pegawai = p.ID_pegawai " +
                    "JOIN playstation ps ON m.ID_playstation = ps.ID_playstation";
        loadDataToTable(sql);
    }//GEN-LAST:event_formWindowOpened


   
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LprnMainDitempat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LprnMainDitempat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LprnMainDitempat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LprnMainDitempat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LprnMainDitempat().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExportExcel;
    private javax.swing.JButton jButtonHome;
    private javax.swing.JButton jButtonMain;
    private javax.swing.JButton jButtonSnack;
    private javax.swing.JButton jButtongameRent;
    private javax.swing.JButton jButtonlgot;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
