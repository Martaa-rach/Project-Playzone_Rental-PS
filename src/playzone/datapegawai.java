/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package playzone;

import java.awt.Color;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.sql.PreparedStatement;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import playzone.datasnack;

public class datapegawai extends javax.swing.JFrame {

    public Statement st;
    public PreparedStatement ps;
    public ResultSet rs;
    java.sql.Connection cobakonek = playzone.Koneksi_db.configDB(); //penting
    private boolean editMode = false;

    /**
     *
     */
    public datapegawai() {
        this.setUndecorated(true);
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        initComponents();
        showdata();
        clearTextField();
        updateEditModeUI();
    }
    
    private String generateAutoID(String table, String column, String prefix) {
        String newID = prefix + "1";
        try {
            String sql = "SELECT " + column + " FROM " + table + " WHERE " + column + " LIKE '" + prefix + "%'";
            PreparedStatement pst = cobakonek.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();

            int maxNumber = 0;

            while (rs.next()) {
                String id = rs.getString(1);
                if (id != null && id.startsWith(prefix)) {
                    try {
                        int number = Integer.parseInt(id.substring(prefix.length()));
                        if (number > maxNumber) {
                            maxNumber = number;
                        }
                    } catch (NumberFormatException e) {
                        // Abaikan jika ID tidak bisa diparse
                    }
                }
            }

            newID = prefix + (maxNumber + 1);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error generate ID: " + e.getMessage());
        }
        return newID;
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        nama = new javax.swing.JTextField();
        phone = new javax.swing.JTextField();
        shift = new javax.swing.JTextField();
        username = new javax.swing.JTextField();
        pw = new javax.swing.JTextField();
        save = new javax.swing.JButton();
        logout = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblemployee = new javax.swing.JTable();
        jComboBox1 = new javax.swing.JComboBox<>();
        playstation = new javax.swing.JButton();
        jajan = new javax.swing.JButton();
        home = new javax.swing.JButton();
        rfid = new javax.swing.JTextField();
        jButtonMode = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        nama.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        nama.setForeground(new java.awt.Color(255, 255, 255));
        nama.setBorder(null);
        nama.setCaretColor(new java.awt.Color(255, 255, 255));
        nama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namaActionPerformed(evt);
            }
        });
        getContentPane().add(nama, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 603, 380, 40));

        phone.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        phone.setForeground(new java.awt.Color(255, 255, 255));
        phone.setBorder(null);
        phone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneActionPerformed(evt);
            }
        });
        phone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                phoneKeyTyped(evt);
            }
        });
        getContentPane().add(phone, new org.netbeans.lib.awtextra.AbsoluteConstraints(435, 656, 380, 40));

        shift.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        shift.setForeground(new java.awt.Color(255, 255, 255));
        shift.setBorder(null);
        shift.setDoubleBuffered(true);
        shift.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shiftActionPerformed(evt);
            }
        });
        getContentPane().add(shift, new org.netbeans.lib.awtextra.AbsoluteConstraints(948, 548, 400, 40));

        username.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        username.setForeground(new java.awt.Color(255, 255, 255));
        username.setBorder(null);
        username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameActionPerformed(evt);
            }
        });
        getContentPane().add(username, new org.netbeans.lib.awtextra.AbsoluteConstraints(999, 601, 350, 40));

        pw.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        pw.setForeground(new java.awt.Color(255, 255, 255));
        pw.setBorder(null);
        pw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pwActionPerformed(evt);
            }
        });
        getContentPane().add(pw, new org.netbeans.lib.awtextra.AbsoluteConstraints(997, 656, 350, 40));

        save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/btn save data.png"))); // NOI18N
        save.setContentAreaFilled(false);
        save.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/efk save data.png"))); // NOI18N
        save.setLabel("");
        save.setContentAreaFilled(false);
        save.setBorderPainted(false);
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        getContentPane().add(save, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 708, 380, 50));

        logout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/btn isi logout.png"))); // NOI18N
        logout.setContentAreaFilled(false);
        logout.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/efk isi logout.png"))); // NOI18N
        logout.setLabel("");
        logout.setContentAreaFilled(false);
        logout.setBorderPainted(false);
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });
        getContentPane().add(logout, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 670, 220, 90));

        tblemployee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID Pegawai", "ID akun", "ID Kartu RFID", "Nama", "Phone", "Shift", "Username", "Password"
            }
        ));
        tblemployee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblemployeeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblemployee);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 140, 1020, 380));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Employee", "Attendance" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 21, 350, 40));

        playstation.setLabel("");
        playstation.setContentAreaFilled(false);
        playstation.setBorderPainted(false);
        playstation.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/btn isi PlayStation.png"))); // NOI18N
        playstation.setContentAreaFilled(false);
        playstation.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/efk isi PlayStation.png"))); // NOI18N
        playstation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playstationActionPerformed(evt);
            }
        });
        getContentPane().add(playstation, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 468, 200, -1));

        jajan.setLabel("");
        jajan.setContentAreaFilled(false);
        jajan.setBorderPainted(false);
        jajan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/btn isi Snack.png"))); // NOI18N
        jajan.setContentAreaFilled(false);
        jajan.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/efk isi Snack.png"))); // NOI18N
        jajan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jajanActionPerformed(evt);
            }
        });
        getContentPane().add(jajan, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 530, 150, 50));

        home.setLabel("");
        home.setContentAreaFilled(false);
        home.setBorderPainted(false);
        home.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/btn isi home.png"))); // NOI18N
        home.setContentAreaFilled(false);
        home.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/efk isi home.png"))); // NOI18N
        home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeActionPerformed(evt);
            }
        });
        getContentPane().add(home, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 220, 230, 70));

        rfid.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        rfid.setForeground(new java.awt.Color(255, 255, 255));
        rfid.setBorder(null);
        rfid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                rfidKeyTyped(evt);
            }
        });
        getContentPane().add(rfid, new org.netbeans.lib.awtextra.AbsoluteConstraints(433, 548, 380, 40));

        jButtonMode.setContentAreaFilled(false);
        jButtonMode.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/btn edit.png"))); // NOI18N
        jButtonMode.setContentAreaFilled(false);
        jButtonMode.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/efk edit.png"))); // NOI18N
        jButtonMode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModeActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonMode, new org.netbeans.lib.awtextra.AbsoluteConstraints(318, 708, 310, 50));

        jButtonDelete.setContentAreaFilled(false);
        jButtonDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/btn delete.png"))); // NOI18N
        jButtonDelete.setContentAreaFilled(false);
        jButtonDelete.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/efk delete.png"))); // NOI18N
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 708, 310, 50));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/bg no employee admin.png"))); // NOI18N
        jLabel1.setText("0p0p0");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void namaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namaActionPerformed

    }//GEN-LAST:event_namaActionPerformed

    private void phoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneActionPerformed

    }//GEN-LAST:event_phoneActionPerformed

    private void shiftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shiftActionPerformed

    }//GEN-LAST:event_shiftActionPerformed

    private void usernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameActionPerformed

    }//GEN-LAST:event_usernameActionPerformed

    private void pwActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pwActionPerformed

    }//GEN-LAST:event_pwActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed

      /*  int confirm = JOptionPane.showConfirmDialog(null, "Yakin ingin logout?", "Logout", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
                login out = new login();
                out.setVisible(true);
                this.dispose();
        } else {
            System.out.println("Logout dibatalkan.");
        }*/
    }//GEN-LAST:event_logoutActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        DefaultTableModel model = (DefaultTableModel) tblemployee.getModel();
        String Rfid = rfid.getText();
        String Nama = nama.getText();
        String Phone = phone.getText();
        String Shift = shift.getText();
        String Username = username.getText();
        String Password = pw.getText(); // atau new String(pw.getPassword());
        String idAkunBaru = generateAutoID("akun", "ID_akun", "AKN");
        String idPegawai = generateAutoID("pegawai", "ID_pegawai", "PGW");

        int selectedRow = tblemployee.getSelectedRow();

        try {
            if (selectedRow != -1) {
                // Mode UPDATE
                String kodePegawai = (String) model.getValueAt(selectedRow, 0);
                String IDakun = (String) model.getValueAt(selectedRow, 1);

                // Update akun
                String updateAkun = "UPDATE akun SET username = ?, password = ? WHERE ID_akun = ?";
                ps = cobakonek.prepareStatement(updateAkun);
                ps.setString(1, Username);
                ps.setString(2, Password);
                ps.setString(3, IDakun);
                ps.executeUpdate();

                // Update pegawai
                String updatePegawai = "UPDATE pegawai SET ID_kartuRFID = ?, Nama = ?, no_hp = ?, Shift = ? WHERE ID_pegawai = ?";
                ps = cobakonek.prepareStatement(updatePegawai);
                ps.setString(1, Rfid);
                ps.setString(2, Nama);
                ps.setString(3, Phone);
                ps.setString(4, Shift);
                ps.setString(5, kodePegawai);
                ps.executeUpdate();

                // Update juga di tabel UI
                model.setValueAt(Rfid, selectedRow, 2);
                model.setValueAt(Nama, selectedRow, 3);
                model.setValueAt(Phone, selectedRow, 4);
                model.setValueAt(Shift, selectedRow, 5);
                model.setValueAt(Username, selectedRow, 6);
                model.setValueAt(Password, selectedRow, 7);

            } else {
                // Mode INSERT
                // Simpan ke tabel akun dulu
                String insertAkun = "INSERT INTO akun (ID_akun,ID_kartuRFID, username, password) VALUES (?, ?, ?, ?)";
                ps = cobakonek.prepareStatement(insertAkun, Statement.RETURN_GENERATED_KEYS);
                ps.setString(1, idAkunBaru);
                ps.setString(2, Rfid);
                ps.setString(3, Username);
                ps.setString(4, Password);
                ps.executeUpdate();

                rs = ps.getGeneratedKeys();
               // String IDakun = "";
                if (rs.next()) {
                    idAkunBaru = rs.getString(1);
                }

                // Simpan ke tabel pegawai
                String insertPegawai = "INSERT INTO pegawai (ID_pegawai, ID_akun, Nama, no_hp, Shift) VALUES (?, ?, ?, ?, ?)";
                ps = cobakonek.prepareStatement(insertPegawai, Statement.RETURN_GENERATED_KEYS);
                ps.setString(1, idPegawai);
                ps.setString(2, idAkunBaru);
                 ps.setString(3, Nama);
                ps.setString(4, Phone);
                ps.setString(5, Shift);
                ps.executeUpdate();

                rs = ps.getGeneratedKeys();
                // String IDpegawai = "";
                if (rs.next()) {
                    idPegawai = rs.getString(1);
                }
                JOptionPane.showMessageDialog(null, "Data berhasil disimpan!");
                // Masukkan ke tabel UI
                model.insertRow(0, new Object[]{idPegawai, idAkunBaru, Rfid, Nama, Phone, Shift, Username, Password});
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Gagal menyimpan: " + e.getMessage());
        }

        clearTextField();
        showdata(); // refresh dari DB
        editMode = false;
        updateEditModeUI();
    }//GEN-LAST:event_saveActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
     /*   String selectedItem = jComboBox1.getSelectedItem().toString();
        if (selectedItem.equalsIgnoreCase("attendance")) {
            RekapAdmin nw_transaksi;
            try {
                nw_transaksi = new RekapAdmin();
                nw_transaksi.setVisible(true);
                this.dispose();

            } catch (SQLException ex) {
                Logger.getLogger(datapegawai.class.getName()).log(Level.SEVERE, null, ex);
            }

        }*/
        // Jika "employee", tidak melakukan apa-apa (tetap di halaman ini)
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void homeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeActionPerformed
       /* homeAdmin nw_transaksi = new homeAdmin();
        nw_transaksi.setVisible(true);
        this.dispose();*/
    }//GEN-LAST:event_homeActionPerformed

    private void playstationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playstationActionPerformed
       /* dataPS_admin nw_transaksi = new dataPS_admin();
        nw_transaksi.setVisible(true);
        this.dispose();*/
    }//GEN-LAST:event_playstationActionPerformed

    private void jajanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jajanActionPerformed
        datasnack nw_transaksi = new datasnack();
        nw_transaksi.setVisible(true);
        this.dispose();

    }//GEN-LAST:event_jajanActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        nama.setOpaque(false);
        nama.setBorder(null);
        nama.setBackground(new java.awt.Color(0, 0, 0, 0));
        nama.setForeground(new Color(255, 255, 255));

        phone.setOpaque(false);
        phone.setBorder(null);
        phone.setBackground(new java.awt.Color(0, 0, 0, 0));
        phone.setForeground(new Color(255, 255, 255));

        shift.setOpaque(false);
        shift.setBorder(null);
        shift.setBackground(new java.awt.Color(0, 0, 0, 0));
        shift.setForeground(new Color(255, 255, 255));

        username.setOpaque(false);
        username.setBorder(null);
        username.setBackground(new java.awt.Color(0, 0, 0, 0));
        username.setForeground(new Color(255, 255, 255));

        pw.setOpaque(false);
        pw.setBorder(null);
        pw.setBackground(new java.awt.Color(0, 0, 0, 0));
        pw.setForeground(new Color(255, 255, 255));

        save.setOpaque(false);
        save.setBorder(null);
        save.setBackground(new java.awt.Color(0, 0, 0, 0));
        save.setForeground(new Color(255, 255, 255));

        logout.setOpaque(false);
        logout.setBorder(null);
        logout.setBackground(new java.awt.Color(0, 0, 0, 0));
        logout.setForeground(new Color(255, 255, 255));

        nama.setOpaque(false);
        nama.setBorder(null);
        nama.setBackground(new java.awt.Color(0, 0, 0, 0));
        nama.setForeground(new Color(255, 255, 255));

        home.setOpaque(false);
        home.setBorder(null);
        home.setBackground(new java.awt.Color(0, 0, 0, 0));
        home.setForeground(new Color(255, 255, 255));

        playstation.setOpaque(false);
        playstation.setBorder(null);
        playstation.setBackground(new java.awt.Color(0, 0, 0, 0));
        playstation.setForeground(new Color(255, 255, 255));

        jajan.setOpaque(false);
        jajan.setBorder(null);
        jajan.setBackground(new java.awt.Color(0, 0, 0, 0));
        jajan.setForeground(new Color(255, 255, 255));

        rfid.setOpaque(false);
        rfid.setBorder(null);
        rfid.setBackground(new java.awt.Color(0, 0, 0, 0));
        rfid.setForeground(new Color(255, 255, 255));
    }//GEN-LAST:event_formWindowOpened

    private void tblemployeeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblemployeeMouseClicked
        int row = tblemployee.getSelectedRow();
        if (row >= 0) {
            //  int id = (int) jTable1.getValueAt(selectedRow, 0);

            int confirm = JOptionPane.showConfirmDialog(
                    null,
                    "Apakah kamu ingin mengedit data ini ?",
                    "Konfirmasi Edit",
                    JOptionPane.YES_NO_OPTION
            );

            if (confirm == JOptionPane.YES_OPTION) {
                Object rfidValue = tblemployee.getValueAt(row, 2);
                rfid.setText(rfidValue != null ? rfidValue.toString() : "");
                nama.setText(tblemployee.getValueAt(row, 3).toString());
                phone.setText(tblemployee.getValueAt(row, 4).toString());
                shift.setText(tblemployee.getValueAt(row, 5).toString());
                username.setText(tblemployee.getValueAt(row, 6).toString());
                pw.setText(tblemployee.getValueAt(row, 7).toString());

                editMode = true;
                updateEditModeUI();
            }
        }
    }//GEN-LAST:event_tblemployeeMouseClicked

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        int selectedRow = tblemployee.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Pilih data yang ingin dihapus!");
            return;
        }

        String idPegawai = (String) tblemployee.getValueAt(selectedRow, 0); // Kode Pegawai = ID_pegawai
        String idAkun = (String) tblemployee.getValueAt(selectedRow, 1);    // ID akun

        int confirm = JOptionPane.showConfirmDialog(null, "Apakah Anda yakin ingin menghapus data ini?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            try {
                cobakonek.setAutoCommit(false); // Mulai transaksi

                // 1. Hapus dari tabel pegawai (karena ada kolom ID_akun di sana)
                String sqlPegawai = "DELETE FROM pegawai WHERE ID_pegawai = ?";
                try (PreparedStatement statPegawai = cobakonek.prepareStatement(sqlPegawai)) {
                    statPegawai.setString(1, idPegawai);
                    statPegawai.executeUpdate();
                }

                // 2. Hapus dari tabel akun berdasarkan ID_akun
                String sqlAkun = "DELETE FROM akun WHERE ID_akun = ?";
                try (PreparedStatement statAkun = cobakonek.prepareStatement(sqlAkun)) {
                    statAkun.setString(1, idAkun);
                    statAkun.executeUpdate();
                }

                cobakonek.commit(); // Commit transaksi

                JOptionPane.showMessageDialog(null, "Data pegawai dan akun berhasil dihapus!");
                clearTextField();
                showdata();
                editMode = false;
                updateEditModeUI();

            } catch (SQLException e) {
                try {
                    cobakonek.rollback(); // Rollback kalau error
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }
                JOptionPane.showMessageDialog(null, "Error saat menghapus data: " + e.getMessage());
            } finally {
                try {
                    cobakonek.setAutoCommit(true);
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jButtonModeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModeActionPerformed
        int confirm = JOptionPane.showConfirmDialog(this,
                "Apakah Anda yakin ingin membatalkan pengeditan?\nPerubahan yang belum disimpan akan hilang!",
                "Konfirmasi", JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            clearTextField(); // method kamu untuk mengosongkan input
            editMode = false;
            updateEditModeUI();
        }
    }//GEN-LAST:event_jButtonModeActionPerformed

    private void rfidKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rfidKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c) && c != '\b') {
            evt.consume(); 
        }
    }//GEN-LAST:event_rfidKeyTyped

    private void phoneKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_phoneKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c) && c != '\b') {
            evt.consume(); 
        }
    }//GEN-LAST:event_phoneKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(datapegawai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(datapegawai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(datapegawai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(datapegawai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new datapegawai().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton home;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonMode;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jajan;
    private javax.swing.JButton logout;
    private javax.swing.JTextField nama;
    private javax.swing.JTextField phone;
    private javax.swing.JButton playstation;
    private javax.swing.JTextField pw;
    private javax.swing.JTextField rfid;
    private javax.swing.JButton save;
    private javax.swing.JTextField shift;
    private javax.swing.JTable tblemployee;
    private javax.swing.JTextField username;
    // End of variables declaration//GEN-END:variables

    private void showdata() {
        DefaultTableModel model = (DefaultTableModel) tblemployee.getModel();
        model.setRowCount(0);
        try {
            String sql = "SELECT p.ID_pegawai, a.ID_akun, a.ID_kartuRFID, p.Nama, p.no_hp, p.Shift, a.username, a.password "
                    + "FROM pegawai p "
                    + "JOIN akun a ON p.ID_akun = a.ID_akun";

            ps = cobakonek.prepareStatement(sql);
            rs = ps.executeQuery();

            while (rs.next()) {
                String kode = rs.getString("ID_pegawai");
                String IDakun = rs.getString("ID_akun");
                String RFID = rs.getString("ID_kartuRFID");
                String Nama = rs.getString("Nama");
                String hp = rs.getString("no_hp");
                String shif = rs.getString("Shift");
                String Username = rs.getString("username");
                String password = rs.getString("password");

                Object[] Rowdata = {kode, IDakun, RFID, Nama, hp, shif, Username, password};
                model.addRow(Rowdata);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }

    private void clearTextField() {
        // Reset input
        nama.setText("");
        phone.setText("");
        shift.setText("");
        username.setText("");
        pw.setText("");
        rfid.setText("");
        tblemployee.clearSelection();
    }

    private void updateEditModeUI() {
        if (editMode) {
            jButtonMode.setEnabled(true);
            jButtonDelete.setEnabled(true);
        } else {
            jButtonMode.setEnabled(false);
            jButtonDelete.setEnabled(false);
        }
    }

}
