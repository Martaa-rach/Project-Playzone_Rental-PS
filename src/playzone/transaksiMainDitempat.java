/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package playzone;

import java.awt.Color;
import java.awt.Cursor;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.time.LocalDate;
import java.sql.Date; 
import java.sql.SQLException;
import javax.swing.JFrame;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;

/**
 *
 * @author User
 */
public class transaksiMainDitempat extends javax.swing.JFrame {
    public Statement st;
    public PreparedStatement ps;
    public ResultSet rs;
    Connection cobakonek=playzone.Koneksi_db.configDB(); //penting
    
    /**
     * Creates new form transaksiMainDitempat
     */
    public transaksiMainDitempat() {
        this.setUndecorated(true);
        initComponents();
        showdata();
        lebarkolom();
        jTextFieldHarga.setEditable(false);
        jTextFieldKembali.setEditable(false);
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
    }

      private String generateAutoID(String main_ditempat, String ID_main_ditempat, String TrMN) {
                    String newID = "";
                    try {
                        String sql = "SELECT MAX(" + ID_main_ditempat + ") FROM " + main_ditempat;
                        PreparedStatement pst = cobakonek.prepareStatement(sql);
                        ResultSet rs = pst.executeQuery();

                        if (rs.next()) {
                            String maxID = rs.getString(1);
                            if (maxID != null && maxID.startsWith(TrMN)) {
                                int number = Integer.parseInt(maxID.substring(TrMN.length())) + 1;
                                newID = TrMN + number; 
                            } else {
                                newID = TrMN + "01";
                            }
                        }
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(this, "Error generate ID: " + e.getMessage());
                    }
                    return newID;
                }
    
    public void lebarkolom(){
        TableColumn column;
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF); 
        column = jTable1.getColumnModel().getColumn(0); 
        column.setPreferredWidth(60); 
        column = jTable1.getColumnModel().getColumn(1); 
        column.setPreferredWidth(75); 
        column = jTable1.getColumnModel().getColumn(2); 
        column.setPreferredWidth(95);
        column = jTable1.getColumnModel().getColumn(3); 
        column.setPreferredWidth(80);
        column = jTable1.getColumnModel().getColumn(4); 
        column.setPreferredWidth(115);
        column = jTable1.getColumnModel().getColumn(5); 
        column.setPreferredWidth(60);
        column = jTable1.getColumnModel().getColumn(6); 
        column.setPreferredWidth(119);
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButtonLogout = new javax.swing.JButton();
        jButtonHome = new javax.swing.JButton();
        jButtonGameRent = new javax.swing.JButton();
        jButtonSnack = new javax.swing.JButton();
        jButtonReports = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jTextFieldDurasi = new javax.swing.JTextField();
        jTextFieldHarga = new javax.swing.JTextField();
        jTextFieldBayar = new javax.swing.JTextField();
        jTextFieldKembali = new javax.swing.JTextField();
        jButtonSave = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jComboBoxIDPlaystation = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1375, 770));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setMaximumSize(new java.awt.Dimension(1375, 770));
        jPanel1.setPreferredSize(new java.awt.Dimension(1375, 770));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "ID Pegawai", "Tanggal", "Class", "ID Playstation", "Durasi", "Status"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(746, 52, 610, 670));

        jButtonLogout.setContentAreaFilled(false);
        jButtonLogout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/btn isi logout.png"))); // NOI18N
        jButtonLogout.setBorder(null);
        jButtonLogout.setBorderPainted(false);
        jButtonLogout.setContentAreaFilled(false);
        jButtonLogout.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/efk isi logout.png"))); // NOI18N
        jButtonLogout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonLogoutMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonLogoutMouseExited(evt);
            }
        });
        jButtonLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLogoutActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonLogout, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 670, 240, 90));

        jButtonHome.setContentAreaFilled(false);
        jButtonHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/btn isi home.png"))); // NOI18N
        jButtonHome.setBorder(null);
        jButtonHome.setContentAreaFilled(false);
        jButtonHome.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButtonHome.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/efk isi home.png"))); // NOI18N
        jButtonHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonHomeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonHomeMouseExited(evt);
            }
        });
        jButtonHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHomeActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonHome, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 220, 230, 70));

        jButtonGameRent.setContentAreaFilled(false);
        jButtonGameRent.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/btn isi Game Rent.png"))); // NOI18N
        jButtonGameRent.setContentAreaFilled(false);
        jButtonGameRent.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/efk isi Game Rent.png"))); // NOI18N
        jButtonGameRent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonGameRentMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonGameRentMouseExited(evt);
            }
        });
        jButtonGameRent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGameRentActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonGameRent, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 350, 190, 50));

        jButtonSnack.setContentAreaFilled(false);
        jButtonSnack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/btn isi Snack.png"))); // NOI18N
        jButtonSnack.setBorder(null);
        jButtonSnack.setContentAreaFilled(false);
        jButtonSnack.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/efk isi Snack.png"))); // NOI18N
        jButtonSnack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonSnackMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonSnackMouseExited(evt);
            }
        });
        jButtonSnack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSnackActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonSnack, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 500, 200, 60));

        jButtonReports.setContentAreaFilled(false);
        jButtonReports.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/btn isi Reports.png"))); // NOI18N
        jButtonReports.setBorder(null);
        jButtonReports.setContentAreaFilled(false);
        jButtonReports.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/efk isi Reports.png"))); // NOI18N
        jButtonReports.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonReportsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonReportsMouseExited(evt);
            }
        });
        jButtonReports.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonReportsActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonReports, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 573, 180, 50));

        jComboBox1.setFont(new java.awt.Font("Calibri", 1, 23)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Regular", "VIP" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 181, 210, 50));

        jTextFieldDurasi.setFont(new java.awt.Font("Calibri", 1, 23)); // NOI18N
        jTextFieldDurasi.setForeground(new java.awt.Color(255, 255, 255));
        jTextFieldDurasi.setBorder(null);
        jTextFieldDurasi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDurasiActionPerformed(evt);
            }
        });
        jTextFieldDurasi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                keyReleasedDurasiHarga(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldDurasiKeyTyped(evt);
            }
        });
        jPanel1.add(jTextFieldDurasi, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 350, 40, 40));

        jTextFieldHarga.setFont(new java.awt.Font("Calibri", 1, 23)); // NOI18N
        jTextFieldHarga.setForeground(new java.awt.Color(255, 255, 255));
        jTextFieldHarga.setBorder(null);
        jTextFieldHarga.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldHargaKeyTyped(evt);
            }
        });
        jPanel1.add(jTextFieldHarga, new org.netbeans.lib.awtextra.AbsoluteConstraints(514, 419, 180, 50));

        jTextFieldBayar.setFont(new java.awt.Font("Calibri", 1, 23)); // NOI18N
        jTextFieldBayar.setForeground(new java.awt.Color(255, 255, 255));
        jTextFieldBayar.setBorder(null);
        jTextFieldBayar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                keyReleaBayarKembali(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldBayarKeyTyped(evt);
            }
        });
        jPanel1.add(jTextFieldBayar, new org.netbeans.lib.awtextra.AbsoluteConstraints(514, 499, 180, 50));

        jTextFieldKembali.setFont(new java.awt.Font("Calibri", 1, 23)); // NOI18N
        jTextFieldKembali.setForeground(new java.awt.Color(255, 255, 255));
        jTextFieldKembali.setBorder(null);
        jTextFieldKembali.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldKembaliKeyTyped(evt);
            }
        });
        jPanel1.add(jTextFieldKembali, new org.netbeans.lib.awtextra.AbsoluteConstraints(544, 579, 150, 40));

        jButtonSave.setContentAreaFilled(false);
        jButtonSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/btn save sewa-main.png"))); // NOI18N
        jButtonSave.setBorder(null);
        jButtonSave.setContentAreaFilled(false);
        jButtonSave.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/efk save sewa+main.png"))); // NOI18N
        jButtonSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonSaveMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonSaveMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonSaveMouseExited(evt);
            }
        });
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 660, 310, 60));

        jLabel3.setFont(new java.awt.Font("Myanmar Text", 1, 20)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Rp.");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 415, -1, 60));

        jLabel4.setFont(new java.awt.Font("Myanmar Text", 1, 20)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Rp.");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 500, -1, 50));

        jLabel5.setFont(new java.awt.Font("Myanmar Text", 1, 20)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Rp.");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(508, 580, 30, 40));

        jComboBoxIDPlaystation.setFont(new java.awt.Font("Calibri", 1, 23)); // NOI18N
        jComboBoxIDPlaystation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel1.add(jComboBoxIDPlaystation, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 260, 210, 50));

        jLabel2.setFont(new java.awt.Font("Myanmar Text", 1, 20)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Jam");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 342, 60, 60));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/bg no On-Spot Play.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSnackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSnackActionPerformed
        /*transaksiSnack nw_transaksi = new transaksiSnack();
        nw_transaksi.setVisible(true);
        this.dispose();*/
    }//GEN-LAST:event_jButtonSnackActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        loadPlaystationID("Regular");
        // Bikin tulisan di tengah
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(SwingConstants.CENTER);

        // Terapkan ke semua kolom
        for (int i = 0; i < jTable1.getColumnCount(); i++) {
            jTable1.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
        }

        // Tampilkan garis tabel antar sel
        jTable1.setShowGrid(true);
        jTable1.setGridColor(Color.LIGHT_GRAY);

        
        jTextFieldDurasi.setOpaque(false);
        jTextFieldDurasi.setBackground(new Color(0,0,0,0));
        jTextFieldDurasi.setBorder(null);
        jTextFieldDurasi.setForeground(Color.WHITE);
        jTextFieldDurasi.setCaretColor(Color.WHITE);
        
        jTextFieldHarga.setOpaque(false);
        jTextFieldHarga.setBackground(new Color(0,0,0,0));
        jTextFieldHarga.setBorder(null);
        jTextFieldHarga.setForeground(Color.WHITE);
        jTextFieldHarga.setCaretColor(Color.WHITE);
        
        jTextFieldBayar.setOpaque(false);
        jTextFieldBayar.setBackground(new Color(0,0,0,0));
        jTextFieldBayar.setBorder(null);
        jTextFieldBayar.setForeground(Color.WHITE);
        jTextFieldBayar.setCaretColor(Color.WHITE);
        
        jTextFieldKembali.setOpaque(false);
        jTextFieldKembali.setBackground(new Color(0,0,0,0));
        jTextFieldKembali.setBorder(null);
        jTextFieldKembali.setForeground(Color.WHITE);
        jTextFieldKembali.setCaretColor(Color.WHITE);
    }//GEN-LAST:event_formWindowOpened

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int row = jTable1.getSelectedRow();
        int col = jTable1.getSelectedColumn(); // Tambahkan ini untuk tahu kolom yang diklik

        if (row != -1 && col != -1) {
            if (col == 6) { // Kolom "Status"
                String Status = (String) jTable1.getValueAt(row, 6);

                if (Status.equals("sedang dimainkan")) {
                    int confirm = JOptionPane.showConfirmDialog(this,
                            "Apakah Anda yakin ingin mengubah status menjadi 'selesai'?",
                            "Konfirmasi", JOptionPane.YES_NO_OPTION);

                    if (confirm == JOptionPane.YES_OPTION) {
                        jTable1.setValueAt("selesai", row, 6);
                        updateStatusSelesai(row);
                        JOptionPane.showMessageDialog(this, "Status berhasil diperbarui!", "Sukses", JOptionPane.INFORMATION_MESSAGE);
                        loadPlaystationID(jComboBox1.getSelectedItem().toString());
                        clearTextField();
                    }
                }
            } else if (col == 0) { // Kolom ID
                String idMainDitempat = (String) jTable1.getValueAt(row, 0);
                int confirmDelete = JOptionPane.showConfirmDialog(this,
                        "Apakah Anda yakin ingin menghapus data dengan ID Main Ditempat " + idMainDitempat + "?",
                        "Konfirmasi Hapus", JOptionPane.YES_NO_OPTION);

                if (confirmDelete == JOptionPane.YES_OPTION) {
                    deleteData(idMainDitempat);
                  //  showdata(); // Refresh isi tabel
                    loadPlaystationID(jComboBox1.getSelectedItem().toString());
                 //   JOptionPane.showMessageDialog(this, "Data berhasil dihapus.");
                }
            }
        }
    }//GEN-LAST:event_jTable1MouseClicked

    
    
    private void jButtonSaveMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonSaveMouseEntered
        setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jButtonSaveMouseEntered

    private void jButtonSaveMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonSaveMouseExited
        setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_jButtonSaveMouseExited

    private void jButtonSaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonSaveMouseClicked

    }//GEN-LAST:event_jButtonSaveMouseClicked

    private void jButtonLogoutMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonLogoutMouseEntered
        setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jButtonLogoutMouseEntered

    private void jButtonLogoutMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonLogoutMouseExited
        setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_jButtonLogoutMouseExited

    private void jButtonReportsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonReportsMouseEntered
        setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jButtonReportsMouseEntered

    private void jButtonReportsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonReportsMouseExited
        setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_jButtonReportsMouseExited

    private void jButtonSnackMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonSnackMouseExited
        setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_jButtonSnackMouseExited

    private void jButtonSnackMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonSnackMouseEntered
        setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jButtonSnackMouseEntered

    private void jButtonGameRentMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonGameRentMouseExited
        setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_jButtonGameRentMouseExited

    private void jButtonGameRentMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonGameRentMouseEntered
        setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jButtonGameRentMouseEntered

    private void jButtonHomeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonHomeMouseExited
        setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_jButtonHomeMouseExited

    private void jButtonHomeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonHomeMouseEntered
        setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jButtonHomeMouseEntered

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        try {
            String idTransaksi = generateAutoID("main_ditempat", "ID_main_ditempat", "TrMN");
            String idPS = jComboBoxIDPlaystation.getSelectedItem().toString(); // Baca input dari combo box 
            String kelas = jComboBox1.getSelectedItem().toString(); // Baca input dari pilihan combo box
            
            if (kelas.equalsIgnoreCase("Regular") && idPS == "1") {
                JOptionPane.showMessageDialog(null, "ID Playstation 1 hanya untuk Class VIP!");
                return;
            }
            
            // Ambil status dari database untuk memunculkan notif jika ID PS sedang dimainkan
            String cekStatus = "SELECT status FROM playstation WHERE ID_playstation = ?";
            PreparedStatement cekPS = cobakonek.prepareStatement(cekStatus);
            cekPS.setString(1, idPS);
            ResultSet rs = cekPS.executeQuery();
            if (rs.next()) {
                String statusPS = rs.getString("status");

                if (statusPS.equalsIgnoreCase("dimainkan")) {
                    JOptionPane.showMessageDialog(null, "ID Playstation " + idPS + " sedang dimainkan. Mohon pilih Playstation yang kosong.");
                    return;
                } else if (statusPS.equalsIgnoreCase("disewa")) {
                    JOptionPane.showMessageDialog(null, "ID Playstation " + idPS + " sedang disewa. Mohon pilih Playstation yang kosong.");
                    return;
                } else if (statusPS.equalsIgnoreCase("diservis")) {
                    JOptionPane.showMessageDialog(null, "ID Playstation " + idPS + " sedang diservis. Mohon pilih Playstation lain.");
                    return;
                }
            }

            
            
            String sql = "INSERT INTO main_ditempat (ID_main_ditempat, ID_playstation, ID_pegawai, Tanggal, Durasi_main, Total_biaya, Bayar, Kembalian, Class, status) "
                       + "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            PreparedStatement pst = cobakonek.prepareStatement(sql);


            // Ambil nilai dari field input
            String idPegawai = SessionLogin.getID_pegawai();
            Date tanggal = Date.valueOf(LocalDate.now());
            int durasi = Integer.parseInt(jTextFieldDurasi.getText());
            double total = Double.parseDouble(jTextFieldHarga.getText());
            double bayar = Double.parseDouble(jTextFieldBayar.getText());
            double kembali = Double.parseDouble(jTextFieldKembali.getText());
            String status = "sedang dimainkan";
            String statusPS = "dimainkan";

            
            if (kelas.equalsIgnoreCase("VIP") && durasi % 2 != 0) {
                JOptionPane.showMessageDialog(null, "Durasi VIP harus kelipatan 2 jam!");
                return;
            }
            if (bayar < total) {
                JOptionPane.showMessageDialog(null, "Uang bayar kurang!");
                return;
            }
            
            // Set data
            pst.setString(1, idTransaksi);
            pst.setString(2, idPS);
            pst.setString(3, idPegawai);
            pst.setDate(4, tanggal);
            pst.setInt(5, durasi);
            pst.setDouble(6, total);
            pst.setDouble(7, bayar);
            pst.setDouble(8, kembali);
            pst.setString(9, kelas);
            pst.setString(10, status);

            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "Data berhasil disimpan!");

            // Tambahkan ini untuk update status PS jadi "dimainkan"
            String updateStatus = "UPDATE playstation SET status = ? WHERE ID_playstation = ?";
            PreparedStatement pstStatus = cobakonek.prepareStatement(updateStatus);
            pstStatus.setString(1, statusPS); // statusPS = "dimainkan"
            pstStatus.setString(2, idPS);
            pstStatus.executeUpdate();
            
            // Panggil fungsi untuk refresh jTable1
            showdata();
            loadPlaystationID(jComboBox1.getSelectedItem().toString()); // Refresh data ID PS
            clearTextField();

            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Gagal simpan: " + e.getMessage());
        }
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jButtonLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLogoutActionPerformed
           /* int confirm = JOptionPane.showConfirmDialog(
                this,
                "Apakah anda yakin ingin keluar?",
                "Konfirmasi Logout",
                JOptionPane.YES_NO_OPTION
            );

            if (confirm == JOptionPane.YES_OPTION) {
                SessionLogin.clearSession();
                login backToLogin = new login();
                backToLogin.setVisible(true);
                this.dispose();
            }  */      
    }//GEN-LAST:event_jButtonLogoutActionPerformed

    private void keyReleasedDurasiHarga(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_keyReleasedDurasiHarga
        hitungTotalBiaya();
    }//GEN-LAST:event_keyReleasedDurasiHarga

    private void keyReleaBayarKembali(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_keyReleaBayarKembali
        hitungKembalian();
    }//GEN-LAST:event_keyReleaBayarKembali

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        String kategori = jComboBox1.getSelectedItem().toString();
        loadPlaystationID(kategori); // Panggil isi ulang ID PS
        /*if (selectedClass.equalsIgnoreCase("VIP")) {
            jTextFieldPS.setText("1");
            jTextFieldPS.setEditable(false); // nonaktifkan input manual
        } else {
            jTextFieldPS.setText("");        // kosongkan dulu
            jTextFieldPS.setEditable(true);  // aktifkan input manual
        }*/
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButtonHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHomeActionPerformed
        /*homePegawai nw_transaksi = new homePegawai();
        nw_transaksi.setVisible(true);
        this.dispose();*/
    }//GEN-LAST:event_jButtonHomeActionPerformed

    private void jTextFieldDurasiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDurasiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDurasiActionPerformed

    private void jButtonGameRentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGameRentActionPerformed
        /*TrSewaPegawai nw_transaksi = new TrSewaPegawai();
        nw_transaksi.setVisible(true);
        this.dispose();*/
    }//GEN-LAST:event_jButtonGameRentActionPerformed

    private void jButtonReportsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonReportsActionPerformed
       /*LprnSewa nw_transaksi = new LprnSewa();
        nw_transaksi.setVisible(true);
        this.dispose();*/
    }//GEN-LAST:event_jButtonReportsActionPerformed

    private void jTextFieldDurasiKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldDurasiKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c) && c != '\b') {
            evt.consume(); 
        }
    }//GEN-LAST:event_jTextFieldDurasiKeyTyped

    private void jTextFieldHargaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldHargaKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c) && c != '\b') {
            evt.consume(); 
        }
    }//GEN-LAST:event_jTextFieldHargaKeyTyped

    private void jTextFieldBayarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldBayarKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c) && c != '\b') {
            evt.consume(); 
        }
    }//GEN-LAST:event_jTextFieldBayarKeyTyped

    private void jTextFieldKembaliKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldKembaliKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c) && c != '\b') {
            evt.consume(); 
        }
    }//GEN-LAST:event_jTextFieldKembaliKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(transaksiMainDitempat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(transaksiMainDitempat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(transaksiMainDitempat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(transaksiMainDitempat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new transaksiMainDitempat().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonGameRent;
    private javax.swing.JButton jButtonHome;
    private javax.swing.JButton jButtonLogout;
    private javax.swing.JButton jButtonReports;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JButton jButtonSnack;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBoxIDPlaystation;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldBayar;
    private javax.swing.JTextField jTextFieldDurasi;
    private javax.swing.JTextField jTextFieldHarga;
    private javax.swing.JTextField jTextFieldKembali;
    // End of variables declaration//GEN-END:variables

    private void showdata() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        try {
            String sql = "SELECT * FROM main_ditempat"; //WHERE ID_Pegawai = ? ---- ini kalau difilter pake sesi login aktif
            ps = cobakonek.prepareStatement(sql); //ps.setInt(1, SessionLogin.getID_pegawai()); // Panggil dari session
            rs = ps.executeQuery();

            while (rs.next()) {
                String No = rs.getString("ID_main_ditempat");
                String ID_Playstation = rs.getString("ID_playstation");
                String ID_pegawai = rs.getString("ID_pegawai");
                String Tanggal = rs.getString("Tanggal");
                int Durasi = rs.getInt("Durasi_main");
                String Class = rs.getString("Class");
                String Status = rs.getString("status");

                Object[] Rowdata = {No, ID_pegawai, Tanggal, Class, ID_Playstation, Durasi, Status};
                model.addRow(Rowdata);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }

    private void updateStatusSelesai(int row) {
        try {
            String sql = "UPDATE main_ditempat SET status = 'selesai' WHERE ID_main_ditempat = ?";
            PreparedStatement ps = cobakonek.prepareStatement(sql);
            String ID_main_ditempat = jTable1.getValueAt(row, 0).toString();
            ps.setString(1, ID_main_ditempat);
            ps.executeUpdate();
            ps.close();

            String selesai = "UPDATE playstation SET status = 'kosong' WHERE ID_playstation = ?";
            PreparedStatement pstSelesai = cobakonek.prepareStatement(selesai);
            String idPS = jTable1.getValueAt(row, 4).toString(); // Kolom ID_playstation
            pstSelesai.setString(1, idPS);
            pstSelesai.executeUpdate();
            pstSelesai.close();
            

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error saat update status: " + e.getMessage());
        }
    }

    
    private int getHargaSewa(String kategori, String idPS) {
        int harga = 0;
        try {
            String sql = "SELECT harga_VIP, harga_regular FROM playstation WHERE ID_playstation = ?";
            PreparedStatement ps = cobakonek.prepareStatement(sql);
            ps.setString(1, idPS);
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                if (kategori.equalsIgnoreCase("VIP")) {
                    harga = rs.getInt("harga_VIP");
                } else {
                    harga = rs.getInt("harga_regular");
                }
            }
            rs.close();
            ps.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Gagal ambil harga: " + e.getMessage());
        }
        return harga;
    }

    private void hitungTotalBiaya() {  
        try {
            int durasi = Integer.parseInt(jTextFieldDurasi.getText());
            String kelas = jComboBox1.getSelectedItem().toString();
            int harga = 0;
            double total = 0;
            
            String idPS = jComboBoxIDPlaystation.getSelectedItem().toString(); // Ambil ID Playstation
            harga = getHargaSewa(kelas, idPS); // Ambil harga dari database
            
            if (kelas.equalsIgnoreCase("Regular")) {
                total = durasi * harga;
            } else if (kelas.equalsIgnoreCase("VIP")) {
                if (durasi % 2 != 0) {
                    // durasi tidak kelipatan 2
                    JOptionPane.showMessageDialog(null, "Untuk kelas VIP, durasi harus kelipatan 2 jam!");
                    jTextFieldHarga.setText("0");
                    return; // keluar dari fungsi, tidak lanjut hitung
                }

                int paketDuaJam = durasi / 2; // misal 4 jam = 2 paket
                total = paketDuaJam * harga;
            }

            jTextFieldHarga.setText(Integer.toString((int) total));
        } catch (NumberFormatException e) {
            jTextFieldHarga.setText("0");
        } 
    }

    private void hitungKembalian() {
        try {
            double total = Double.parseDouble(jTextFieldHarga.getText());
            double bayar = Double.parseDouble(jTextFieldBayar.getText());
            double kembali = bayar - total;
            jTextFieldKembali.setText(Integer.toString((int) kembali));
        } catch (NumberFormatException e) {
            jTextFieldKembali.setText("0");
        }
    }
    
    private void loadPlaystationID(String kategori) {
        try {
            String sql = "SELECT ID_playstation FROM playstation " +
             "WHERE kategori = ? AND kondisi = 'normal' AND status = 'kosong'";

            PreparedStatement ps = cobakonek.prepareStatement(sql);
            ps.setString(1, kategori);
            ResultSet rs = ps.executeQuery();

            jComboBoxIDPlaystation.removeAllItems(); // Bersihin dulu

            while (rs.next()) {
                jComboBoxIDPlaystation.addItem(rs.getString("ID_playstation"));
            }

            rs.close();
            ps.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Gagal load ID Playstation: " + e.getMessage());
        }
    }

    private void clearTextField() {
        jTextFieldDurasi.setText("");
        jTextFieldHarga.setText("");
        jTextFieldBayar.setText("");
        jTextFieldKembali.setText("");
    }

    private void deleteData(String idMainDitempat) {
        int selectedRow = jTable1.getSelectedRow();
        String status = jTable1.getValueAt(selectedRow, 6).toString();

        if (status.equalsIgnoreCase("sedang dimainkan")) {
            JOptionPane.showMessageDialog(this, "Data tidak bisa dihapus karena status sedang dimainkan.");
        }   else if (status.equalsIgnoreCase("selesai")) {
                try {
                    String sql = "DELETE FROM main_ditempat WHERE ID_main_ditempat = ?";
                    PreparedStatement ps = cobakonek.prepareStatement(sql);
                    ps.setString(1, idMainDitempat);
                    ps.executeUpdate();
                    ps.close();
                    showdata();
                    JOptionPane.showMessageDialog(this, "Data berhasil dihapus");
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(this, "Error saat menghapus data: " + e.getMessage());
                }
            }
    }



    
}
